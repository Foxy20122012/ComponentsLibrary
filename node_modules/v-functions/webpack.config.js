// Generated using webpack-cli https://github.com/webpack/webpack-cli

const path = require('path');

const isProduction = process.env.NODE_ENV == 'production';


const serverConfig = {
    target: 'node',
    entry: './src/functions.js',
    output: {
        path: path.resolve(__dirname, 'dist'),
        filename: 'functions.node.js'
    },
    plugins: [
        // Add your plugins here
        // Learn more about plugins from https://webpack.js.org/configuration/plugins/
    ],
    module: {
        rules: [
            {
                test: /\.(js|jsx)$/i,
                loader: 'babel-loader',
            },
            {
                test: /\.(eot|svg|ttf|woff|woff2|png|jpg|gif)$/i,
                type: 'asset',
            },

            // Add your rules for custom modules here
            // Learn more about loaders from https://webpack.js.org/loaders/
        ],
    },
};

const clientConfig = {
  entry: './src/functions.js',
  output: {
      path: path.resolve(__dirname, 'dist'),
      filename: 'functions.js'
  },
  plugins: [
      // Add your plugins here
      // Learn more about plugins from https://webpack.js.org/configuration/plugins/
  ],
  module: {
      rules: [
          {
              test: /\.(js|jsx)$/i,
              loader: 'babel-loader',
          },
          {
              test: /\.(eot|svg|ttf|woff|woff2|png|jpg|gif)$/i,
              type: 'asset',
          },

          // Add your rules for custom modules here
          // Learn more about loaders from https://webpack.js.org/loaders/
      ],
  },
};

module.exports = () => {
    if (isProduction) {
        serverConfig.mode = 'production';
        clientConfig.mode = 'production';
    } else {
        serverConfig.mode = 'development';
        clientConfig.mode = 'development';
    }
    return [serverConfig, clientConfig];
};
